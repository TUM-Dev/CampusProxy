/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesOrgUnitContacts struct for RoutesOrgUnitContacts
type RoutesOrgUnitContacts struct {
	ContactData *RoutesContactData `json:"contactData,omitempty"`
	// e.g. \"Lehrstuhl\", \"Arbeitsgruppe\", \"Ausschuss\", ...
	Text *string `json:"text,omitempty"`
}

// NewRoutesOrgUnitContacts instantiates a new RoutesOrgUnitContacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesOrgUnitContacts() *RoutesOrgUnitContacts {
	this := RoutesOrgUnitContacts{}
	return &this
}

// NewRoutesOrgUnitContactsWithDefaults instantiates a new RoutesOrgUnitContacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesOrgUnitContactsWithDefaults() *RoutesOrgUnitContacts {
	this := RoutesOrgUnitContacts{}
	return &this
}

// GetContactData returns the ContactData field value if set, zero value otherwise.
func (o *RoutesOrgUnitContacts) GetContactData() RoutesContactData {
	if o == nil || o.ContactData == nil {
		var ret RoutesContactData
		return ret
	}
	return *o.ContactData
}

// GetContactDataOk returns a tuple with the ContactData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesOrgUnitContacts) GetContactDataOk() (*RoutesContactData, bool) {
	if o == nil || o.ContactData == nil {
		return nil, false
	}
	return o.ContactData, true
}

// HasContactData returns a boolean if a field has been set.
func (o *RoutesOrgUnitContacts) HasContactData() bool {
	if o != nil && o.ContactData != nil {
		return true
	}

	return false
}

// SetContactData gets a reference to the given RoutesContactData and assigns it to the ContactData field.
func (o *RoutesOrgUnitContacts) SetContactData(v RoutesContactData) {
	o.ContactData = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RoutesOrgUnitContacts) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesOrgUnitContacts) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RoutesOrgUnitContacts) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RoutesOrgUnitContacts) SetText(v string) {
	o.Text = &v
}

func (o RoutesOrgUnitContacts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactData != nil {
		toSerialize["contactData"] = o.ContactData
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesOrgUnitContacts struct {
	value *RoutesOrgUnitContacts
	isSet bool
}

func (v NullableRoutesOrgUnitContacts) Get() *RoutesOrgUnitContacts {
	return v.value
}

func (v *NullableRoutesOrgUnitContacts) Set(val *RoutesOrgUnitContacts) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesOrgUnitContacts) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesOrgUnitContacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesOrgUnitContacts(val *RoutesOrgUnitContacts) *NullableRoutesOrgUnitContacts {
	return &NullableRoutesOrgUnitContacts{value: val, isSet: true}
}

func (v NullableRoutesOrgUnitContacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesOrgUnitContacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


