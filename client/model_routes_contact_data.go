/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesContactData struct for RoutesContactData
type RoutesContactData struct {
	Adr *RoutesContactDataAdr `json:"adr,omitempty"`
	ContactName *RoutesContactDataContactName `json:"contact_name,omitempty"`
	Email *string `json:"email,omitempty"`
	Telephone *RoutesContactDataTelephone `json:"telephone,omitempty"`
	VisitHour *RoutesContactDataVisitHour `json:"visitHour,omitempty"`
	WebLink *RoutesWebLink `json:"web_link,omitempty"`
}

// NewRoutesContactData instantiates a new RoutesContactData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesContactData() *RoutesContactData {
	this := RoutesContactData{}
	return &this
}

// NewRoutesContactDataWithDefaults instantiates a new RoutesContactData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesContactDataWithDefaults() *RoutesContactData {
	this := RoutesContactData{}
	return &this
}

// GetAdr returns the Adr field value if set, zero value otherwise.
func (o *RoutesContactData) GetAdr() RoutesContactDataAdr {
	if o == nil || o.Adr == nil {
		var ret RoutesContactDataAdr
		return ret
	}
	return *o.Adr
}

// GetAdrOk returns a tuple with the Adr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetAdrOk() (*RoutesContactDataAdr, bool) {
	if o == nil || o.Adr == nil {
		return nil, false
	}
	return o.Adr, true
}

// HasAdr returns a boolean if a field has been set.
func (o *RoutesContactData) HasAdr() bool {
	if o != nil && o.Adr != nil {
		return true
	}

	return false
}

// SetAdr gets a reference to the given RoutesContactDataAdr and assigns it to the Adr field.
func (o *RoutesContactData) SetAdr(v RoutesContactDataAdr) {
	o.Adr = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *RoutesContactData) GetContactName() RoutesContactDataContactName {
	if o == nil || o.ContactName == nil {
		var ret RoutesContactDataContactName
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetContactNameOk() (*RoutesContactDataContactName, bool) {
	if o == nil || o.ContactName == nil {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *RoutesContactData) HasContactName() bool {
	if o != nil && o.ContactName != nil {
		return true
	}

	return false
}

// SetContactName gets a reference to the given RoutesContactDataContactName and assigns it to the ContactName field.
func (o *RoutesContactData) SetContactName(v RoutesContactDataContactName) {
	o.ContactName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RoutesContactData) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *RoutesContactData) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *RoutesContactData) SetEmail(v string) {
	o.Email = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *RoutesContactData) GetTelephone() RoutesContactDataTelephone {
	if o == nil || o.Telephone == nil {
		var ret RoutesContactDataTelephone
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetTelephoneOk() (*RoutesContactDataTelephone, bool) {
	if o == nil || o.Telephone == nil {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *RoutesContactData) HasTelephone() bool {
	if o != nil && o.Telephone != nil {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given RoutesContactDataTelephone and assigns it to the Telephone field.
func (o *RoutesContactData) SetTelephone(v RoutesContactDataTelephone) {
	o.Telephone = &v
}

// GetVisitHour returns the VisitHour field value if set, zero value otherwise.
func (o *RoutesContactData) GetVisitHour() RoutesContactDataVisitHour {
	if o == nil || o.VisitHour == nil {
		var ret RoutesContactDataVisitHour
		return ret
	}
	return *o.VisitHour
}

// GetVisitHourOk returns a tuple with the VisitHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetVisitHourOk() (*RoutesContactDataVisitHour, bool) {
	if o == nil || o.VisitHour == nil {
		return nil, false
	}
	return o.VisitHour, true
}

// HasVisitHour returns a boolean if a field has been set.
func (o *RoutesContactData) HasVisitHour() bool {
	if o != nil && o.VisitHour != nil {
		return true
	}

	return false
}

// SetVisitHour gets a reference to the given RoutesContactDataVisitHour and assigns it to the VisitHour field.
func (o *RoutesContactData) SetVisitHour(v RoutesContactDataVisitHour) {
	o.VisitHour = &v
}

// GetWebLink returns the WebLink field value if set, zero value otherwise.
func (o *RoutesContactData) GetWebLink() RoutesWebLink {
	if o == nil || o.WebLink == nil {
		var ret RoutesWebLink
		return ret
	}
	return *o.WebLink
}

// GetWebLinkOk returns a tuple with the WebLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactData) GetWebLinkOk() (*RoutesWebLink, bool) {
	if o == nil || o.WebLink == nil {
		return nil, false
	}
	return o.WebLink, true
}

// HasWebLink returns a boolean if a field has been set.
func (o *RoutesContactData) HasWebLink() bool {
	if o != nil && o.WebLink != nil {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given RoutesWebLink and assigns it to the WebLink field.
func (o *RoutesContactData) SetWebLink(v RoutesWebLink) {
	o.WebLink = &v
}

func (o RoutesContactData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Adr != nil {
		toSerialize["adr"] = o.Adr
	}
	if o.ContactName != nil {
		toSerialize["contact_name"] = o.ContactName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Telephone != nil {
		toSerialize["telephone"] = o.Telephone
	}
	if o.VisitHour != nil {
		toSerialize["visitHour"] = o.VisitHour
	}
	if o.WebLink != nil {
		toSerialize["web_link"] = o.WebLink
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesContactData struct {
	value *RoutesContactData
	isSet bool
}

func (v NullableRoutesContactData) Get() *RoutesContactData {
	return v.value
}

func (v *NullableRoutesContactData) Set(val *RoutesContactData) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesContactData) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesContactData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesContactData(val *RoutesContactData) *NullableRoutesContactData {
	return &NullableRoutesContactData{value: val, isSet: true}
}

func (v NullableRoutesContactData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesContactData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


