/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesContactDataAdr struct for RoutesContactDataAdr
type RoutesContactDataAdr struct {
	Country *string `json:"country,omitempty"`
	Extadr *string `json:"extadr,omitempty"`
	Locality *string `json:"locality,omitempty"`
	Pcode *string `json:"pcode,omitempty"`
	Street *string `json:"street,omitempty"`
	Text *string `json:"text,omitempty"`
}

// NewRoutesContactDataAdr instantiates a new RoutesContactDataAdr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesContactDataAdr() *RoutesContactDataAdr {
	this := RoutesContactDataAdr{}
	return &this
}

// NewRoutesContactDataAdrWithDefaults instantiates a new RoutesContactDataAdr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesContactDataAdrWithDefaults() *RoutesContactDataAdr {
	this := RoutesContactDataAdr{}
	return &this
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *RoutesContactDataAdr) SetCountry(v string) {
	o.Country = &v
}

// GetExtadr returns the Extadr field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetExtadr() string {
	if o == nil || o.Extadr == nil {
		var ret string
		return ret
	}
	return *o.Extadr
}

// GetExtadrOk returns a tuple with the Extadr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetExtadrOk() (*string, bool) {
	if o == nil || o.Extadr == nil {
		return nil, false
	}
	return o.Extadr, true
}

// HasExtadr returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasExtadr() bool {
	if o != nil && o.Extadr != nil {
		return true
	}

	return false
}

// SetExtadr gets a reference to the given string and assigns it to the Extadr field.
func (o *RoutesContactDataAdr) SetExtadr(v string) {
	o.Extadr = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetLocality() string {
	if o == nil || o.Locality == nil {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetLocalityOk() (*string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *RoutesContactDataAdr) SetLocality(v string) {
	o.Locality = &v
}

// GetPcode returns the Pcode field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetPcode() string {
	if o == nil || o.Pcode == nil {
		var ret string
		return ret
	}
	return *o.Pcode
}

// GetPcodeOk returns a tuple with the Pcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetPcodeOk() (*string, bool) {
	if o == nil || o.Pcode == nil {
		return nil, false
	}
	return o.Pcode, true
}

// HasPcode returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasPcode() bool {
	if o != nil && o.Pcode != nil {
		return true
	}

	return false
}

// SetPcode gets a reference to the given string and assigns it to the Pcode field.
func (o *RoutesContactDataAdr) SetPcode(v string) {
	o.Pcode = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetStreet() string {
	if o == nil || o.Street == nil {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetStreetOk() (*string, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *RoutesContactDataAdr) SetStreet(v string) {
	o.Street = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RoutesContactDataAdr) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesContactDataAdr) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RoutesContactDataAdr) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RoutesContactDataAdr) SetText(v string) {
	o.Text = &v
}

func (o RoutesContactDataAdr) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Extadr != nil {
		toSerialize["extadr"] = o.Extadr
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.Pcode != nil {
		toSerialize["pcode"] = o.Pcode
	}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesContactDataAdr struct {
	value *RoutesContactDataAdr
	isSet bool
}

func (v NullableRoutesContactDataAdr) Get() *RoutesContactDataAdr {
	return v.value
}

func (v *NullableRoutesContactDataAdr) Set(val *RoutesContactDataAdr) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesContactDataAdr) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesContactDataAdr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesContactDataAdr(val *RoutesContactDataAdr) *NullableRoutesContactDataAdr {
	return &NullableRoutesContactDataAdr{value: val, isSet: true}
}

func (v NullableRoutesContactDataAdr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesContactDataAdr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


