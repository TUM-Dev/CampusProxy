/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesInfoBlock struct for RoutesInfoBlock
type RoutesInfoBlock struct {
	Picture *RoutesPicture `json:"picture,omitempty"`
	SubBlock *RoutesInfoBlockSubBlock `json:"sub_block,omitempty"`
	Text *string `json:"text,omitempty"`
	WebLink *RoutesWebLink `json:"web_link,omitempty"`
}

// NewRoutesInfoBlock instantiates a new RoutesInfoBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesInfoBlock() *RoutesInfoBlock {
	this := RoutesInfoBlock{}
	return &this
}

// NewRoutesInfoBlockWithDefaults instantiates a new RoutesInfoBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesInfoBlockWithDefaults() *RoutesInfoBlock {
	this := RoutesInfoBlock{}
	return &this
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *RoutesInfoBlock) GetPicture() RoutesPicture {
	if o == nil || o.Picture == nil {
		var ret RoutesPicture
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlock) GetPictureOk() (*RoutesPicture, bool) {
	if o == nil || o.Picture == nil {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *RoutesInfoBlock) HasPicture() bool {
	if o != nil && o.Picture != nil {
		return true
	}

	return false
}

// SetPicture gets a reference to the given RoutesPicture and assigns it to the Picture field.
func (o *RoutesInfoBlock) SetPicture(v RoutesPicture) {
	o.Picture = &v
}

// GetSubBlock returns the SubBlock field value if set, zero value otherwise.
func (o *RoutesInfoBlock) GetSubBlock() RoutesInfoBlockSubBlock {
	if o == nil || o.SubBlock == nil {
		var ret RoutesInfoBlockSubBlock
		return ret
	}
	return *o.SubBlock
}

// GetSubBlockOk returns a tuple with the SubBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlock) GetSubBlockOk() (*RoutesInfoBlockSubBlock, bool) {
	if o == nil || o.SubBlock == nil {
		return nil, false
	}
	return o.SubBlock, true
}

// HasSubBlock returns a boolean if a field has been set.
func (o *RoutesInfoBlock) HasSubBlock() bool {
	if o != nil && o.SubBlock != nil {
		return true
	}

	return false
}

// SetSubBlock gets a reference to the given RoutesInfoBlockSubBlock and assigns it to the SubBlock field.
func (o *RoutesInfoBlock) SetSubBlock(v RoutesInfoBlockSubBlock) {
	o.SubBlock = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RoutesInfoBlock) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlock) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RoutesInfoBlock) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RoutesInfoBlock) SetText(v string) {
	o.Text = &v
}

// GetWebLink returns the WebLink field value if set, zero value otherwise.
func (o *RoutesInfoBlock) GetWebLink() RoutesWebLink {
	if o == nil || o.WebLink == nil {
		var ret RoutesWebLink
		return ret
	}
	return *o.WebLink
}

// GetWebLinkOk returns a tuple with the WebLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlock) GetWebLinkOk() (*RoutesWebLink, bool) {
	if o == nil || o.WebLink == nil {
		return nil, false
	}
	return o.WebLink, true
}

// HasWebLink returns a boolean if a field has been set.
func (o *RoutesInfoBlock) HasWebLink() bool {
	if o != nil && o.WebLink != nil {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given RoutesWebLink and assigns it to the WebLink field.
func (o *RoutesInfoBlock) SetWebLink(v RoutesWebLink) {
	o.WebLink = &v
}

func (o RoutesInfoBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Picture != nil {
		toSerialize["picture"] = o.Picture
	}
	if o.SubBlock != nil {
		toSerialize["sub_block"] = o.SubBlock
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.WebLink != nil {
		toSerialize["web_link"] = o.WebLink
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesInfoBlock struct {
	value *RoutesInfoBlock
	isSet bool
}

func (v NullableRoutesInfoBlock) Get() *RoutesInfoBlock {
	return v.value
}

func (v *NullableRoutesInfoBlock) Set(val *RoutesInfoBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesInfoBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesInfoBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesInfoBlock(val *RoutesInfoBlock) *NullableRoutesInfoBlock {
	return &NullableRoutesInfoBlock{value: val, isSet: true}
}

func (v NullableRoutesInfoBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesInfoBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


