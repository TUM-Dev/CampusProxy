/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesCourseLevel struct for RoutesCourseLevel
type RoutesCourseLevel struct {
	WebLink *RoutesWebLink `json:"web_link,omitempty"`
}

// NewRoutesCourseLevel instantiates a new RoutesCourseLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesCourseLevel() *RoutesCourseLevel {
	this := RoutesCourseLevel{}
	return &this
}

// NewRoutesCourseLevelWithDefaults instantiates a new RoutesCourseLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesCourseLevelWithDefaults() *RoutesCourseLevel {
	this := RoutesCourseLevel{}
	return &this
}

// GetWebLink returns the WebLink field value if set, zero value otherwise.
func (o *RoutesCourseLevel) GetWebLink() RoutesWebLink {
	if o == nil || o.WebLink == nil {
		var ret RoutesWebLink
		return ret
	}
	return *o.WebLink
}

// GetWebLinkOk returns a tuple with the WebLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourseLevel) GetWebLinkOk() (*RoutesWebLink, bool) {
	if o == nil || o.WebLink == nil {
		return nil, false
	}
	return o.WebLink, true
}

// HasWebLink returns a boolean if a field has been set.
func (o *RoutesCourseLevel) HasWebLink() bool {
	if o != nil && o.WebLink != nil {
		return true
	}

	return false
}

// SetWebLink gets a reference to the given RoutesWebLink and assigns it to the WebLink field.
func (o *RoutesCourseLevel) SetWebLink(v RoutesWebLink) {
	o.WebLink = &v
}

func (o RoutesCourseLevel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebLink != nil {
		toSerialize["web_link"] = o.WebLink
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesCourseLevel struct {
	value *RoutesCourseLevel
	isSet bool
}

func (v NullableRoutesCourseLevel) Get() *RoutesCourseLevel {
	return v.value
}

func (v *NullableRoutesCourseLevel) Set(val *RoutesCourseLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesCourseLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesCourseLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesCourseLevel(val *RoutesCourseLevel) *NullableRoutesCourseLevel {
	return &NullableRoutesCourseLevel{value: val, isSet: true}
}

func (v NullableRoutesCourseLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesCourseLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


