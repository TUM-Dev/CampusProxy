/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesPerson struct for RoutesPerson
type RoutesPerson struct {
	ContactData *RoutesContactData `json:"contact_data,omitempty"`
	Ident *string `json:"ident,omitempty"`
	InfoBlock *RoutesInfoBlock `json:"info_block,omitempty"`
	Name *RoutesPersonName `json:"name,omitempty"`
	PersonId *string `json:"person_id,omitempty"`
	Role *RoutesPersonRole `json:"role,omitempty"`
}

// NewRoutesPerson instantiates a new RoutesPerson object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesPerson() *RoutesPerson {
	this := RoutesPerson{}
	return &this
}

// NewRoutesPersonWithDefaults instantiates a new RoutesPerson object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesPersonWithDefaults() *RoutesPerson {
	this := RoutesPerson{}
	return &this
}

// GetContactData returns the ContactData field value if set, zero value otherwise.
func (o *RoutesPerson) GetContactData() RoutesContactData {
	if o == nil || o.ContactData == nil {
		var ret RoutesContactData
		return ret
	}
	return *o.ContactData
}

// GetContactDataOk returns a tuple with the ContactData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetContactDataOk() (*RoutesContactData, bool) {
	if o == nil || o.ContactData == nil {
		return nil, false
	}
	return o.ContactData, true
}

// HasContactData returns a boolean if a field has been set.
func (o *RoutesPerson) HasContactData() bool {
	if o != nil && o.ContactData != nil {
		return true
	}

	return false
}

// SetContactData gets a reference to the given RoutesContactData and assigns it to the ContactData field.
func (o *RoutesPerson) SetContactData(v RoutesContactData) {
	o.ContactData = &v
}

// GetIdent returns the Ident field value if set, zero value otherwise.
func (o *RoutesPerson) GetIdent() string {
	if o == nil || o.Ident == nil {
		var ret string
		return ret
	}
	return *o.Ident
}

// GetIdentOk returns a tuple with the Ident field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetIdentOk() (*string, bool) {
	if o == nil || o.Ident == nil {
		return nil, false
	}
	return o.Ident, true
}

// HasIdent returns a boolean if a field has been set.
func (o *RoutesPerson) HasIdent() bool {
	if o != nil && o.Ident != nil {
		return true
	}

	return false
}

// SetIdent gets a reference to the given string and assigns it to the Ident field.
func (o *RoutesPerson) SetIdent(v string) {
	o.Ident = &v
}

// GetInfoBlock returns the InfoBlock field value if set, zero value otherwise.
func (o *RoutesPerson) GetInfoBlock() RoutesInfoBlock {
	if o == nil || o.InfoBlock == nil {
		var ret RoutesInfoBlock
		return ret
	}
	return *o.InfoBlock
}

// GetInfoBlockOk returns a tuple with the InfoBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetInfoBlockOk() (*RoutesInfoBlock, bool) {
	if o == nil || o.InfoBlock == nil {
		return nil, false
	}
	return o.InfoBlock, true
}

// HasInfoBlock returns a boolean if a field has been set.
func (o *RoutesPerson) HasInfoBlock() bool {
	if o != nil && o.InfoBlock != nil {
		return true
	}

	return false
}

// SetInfoBlock gets a reference to the given RoutesInfoBlock and assigns it to the InfoBlock field.
func (o *RoutesPerson) SetInfoBlock(v RoutesInfoBlock) {
	o.InfoBlock = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoutesPerson) GetName() RoutesPersonName {
	if o == nil || o.Name == nil {
		var ret RoutesPersonName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetNameOk() (*RoutesPersonName, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoutesPerson) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given RoutesPersonName and assigns it to the Name field.
func (o *RoutesPerson) SetName(v RoutesPersonName) {
	o.Name = &v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *RoutesPerson) GetPersonId() string {
	if o == nil || o.PersonId == nil {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetPersonIdOk() (*string, bool) {
	if o == nil || o.PersonId == nil {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *RoutesPerson) HasPersonId() bool {
	if o != nil && o.PersonId != nil {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *RoutesPerson) SetPersonId(v string) {
	o.PersonId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *RoutesPerson) GetRole() RoutesPersonRole {
	if o == nil || o.Role == nil {
		var ret RoutesPersonRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPerson) GetRoleOk() (*RoutesPersonRole, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *RoutesPerson) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given RoutesPersonRole and assigns it to the Role field.
func (o *RoutesPerson) SetRole(v RoutesPersonRole) {
	o.Role = &v
}

func (o RoutesPerson) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactData != nil {
		toSerialize["contact_data"] = o.ContactData
	}
	if o.Ident != nil {
		toSerialize["ident"] = o.Ident
	}
	if o.InfoBlock != nil {
		toSerialize["info_block"] = o.InfoBlock
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PersonId != nil {
		toSerialize["person_id"] = o.PersonId
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesPerson struct {
	value *RoutesPerson
	isSet bool
}

func (v NullableRoutesPerson) Get() *RoutesPerson {
	return v.value
}

func (v *NullableRoutesPerson) Set(val *RoutesPerson) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesPerson) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesPerson) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesPerson(val *RoutesPerson) *NullableRoutesPerson {
	return &NullableRoutesPerson{value: val, isSet: true}
}

func (v NullableRoutesPerson) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesPerson) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


