/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesInfoBlockSubBlock struct for RoutesInfoBlockSubBlock
type RoutesInfoBlockSubBlock struct {
	SubBlock *string `json:"sub_block,omitempty"`
	Text *string `json:"text,omitempty"`
	UserDefined *string `json:"user_defined,omitempty"`
}

// NewRoutesInfoBlockSubBlock instantiates a new RoutesInfoBlockSubBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesInfoBlockSubBlock() *RoutesInfoBlockSubBlock {
	this := RoutesInfoBlockSubBlock{}
	return &this
}

// NewRoutesInfoBlockSubBlockWithDefaults instantiates a new RoutesInfoBlockSubBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesInfoBlockSubBlockWithDefaults() *RoutesInfoBlockSubBlock {
	this := RoutesInfoBlockSubBlock{}
	return &this
}

// GetSubBlock returns the SubBlock field value if set, zero value otherwise.
func (o *RoutesInfoBlockSubBlock) GetSubBlock() string {
	if o == nil || o.SubBlock == nil {
		var ret string
		return ret
	}
	return *o.SubBlock
}

// GetSubBlockOk returns a tuple with the SubBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlockSubBlock) GetSubBlockOk() (*string, bool) {
	if o == nil || o.SubBlock == nil {
		return nil, false
	}
	return o.SubBlock, true
}

// HasSubBlock returns a boolean if a field has been set.
func (o *RoutesInfoBlockSubBlock) HasSubBlock() bool {
	if o != nil && o.SubBlock != nil {
		return true
	}

	return false
}

// SetSubBlock gets a reference to the given string and assigns it to the SubBlock field.
func (o *RoutesInfoBlockSubBlock) SetSubBlock(v string) {
	o.SubBlock = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RoutesInfoBlockSubBlock) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlockSubBlock) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RoutesInfoBlockSubBlock) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RoutesInfoBlockSubBlock) SetText(v string) {
	o.Text = &v
}

// GetUserDefined returns the UserDefined field value if set, zero value otherwise.
func (o *RoutesInfoBlockSubBlock) GetUserDefined() string {
	if o == nil || o.UserDefined == nil {
		var ret string
		return ret
	}
	return *o.UserDefined
}

// GetUserDefinedOk returns a tuple with the UserDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesInfoBlockSubBlock) GetUserDefinedOk() (*string, bool) {
	if o == nil || o.UserDefined == nil {
		return nil, false
	}
	return o.UserDefined, true
}

// HasUserDefined returns a boolean if a field has been set.
func (o *RoutesInfoBlockSubBlock) HasUserDefined() bool {
	if o != nil && o.UserDefined != nil {
		return true
	}

	return false
}

// SetUserDefined gets a reference to the given string and assigns it to the UserDefined field.
func (o *RoutesInfoBlockSubBlock) SetUserDefined(v string) {
	o.UserDefined = &v
}

func (o RoutesInfoBlockSubBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubBlock != nil {
		toSerialize["sub_block"] = o.SubBlock
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.UserDefined != nil {
		toSerialize["user_defined"] = o.UserDefined
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesInfoBlockSubBlock struct {
	value *RoutesInfoBlockSubBlock
	isSet bool
}

func (v NullableRoutesInfoBlockSubBlock) Get() *RoutesInfoBlockSubBlock {
	return v.value
}

func (v *NullableRoutesInfoBlockSubBlock) Set(val *RoutesInfoBlockSubBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesInfoBlockSubBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesInfoBlockSubBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesInfoBlockSubBlock(val *RoutesInfoBlockSubBlock) *NullableRoutesInfoBlockSubBlock {
	return &NullableRoutesInfoBlockSubBlock{value: val, isSet: true}
}

func (v NullableRoutesInfoBlockSubBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesInfoBlockSubBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


