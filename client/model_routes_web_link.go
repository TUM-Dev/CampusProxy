/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesWebLink struct for RoutesWebLink
type RoutesWebLink struct {
	Href *string `json:"href,omitempty"`
	UserDefined *string `json:"user_defined,omitempty"`
}

// NewRoutesWebLink instantiates a new RoutesWebLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesWebLink() *RoutesWebLink {
	this := RoutesWebLink{}
	return &this
}

// NewRoutesWebLinkWithDefaults instantiates a new RoutesWebLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesWebLinkWithDefaults() *RoutesWebLink {
	this := RoutesWebLink{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RoutesWebLink) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesWebLink) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RoutesWebLink) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RoutesWebLink) SetHref(v string) {
	o.Href = &v
}

// GetUserDefined returns the UserDefined field value if set, zero value otherwise.
func (o *RoutesWebLink) GetUserDefined() string {
	if o == nil || o.UserDefined == nil {
		var ret string
		return ret
	}
	return *o.UserDefined
}

// GetUserDefinedOk returns a tuple with the UserDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesWebLink) GetUserDefinedOk() (*string, bool) {
	if o == nil || o.UserDefined == nil {
		return nil, false
	}
	return o.UserDefined, true
}

// HasUserDefined returns a boolean if a field has been set.
func (o *RoutesWebLink) HasUserDefined() bool {
	if o != nil && o.UserDefined != nil {
		return true
	}

	return false
}

// SetUserDefined gets a reference to the given string and assigns it to the UserDefined field.
func (o *RoutesWebLink) SetUserDefined(v string) {
	o.UserDefined = &v
}

func (o RoutesWebLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.UserDefined != nil {
		toSerialize["user_defined"] = o.UserDefined
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesWebLink struct {
	value *RoutesWebLink
	isSet bool
}

func (v NullableRoutesWebLink) Get() *RoutesWebLink {
	return v.value
}

func (v *NullableRoutesWebLink) Set(val *RoutesWebLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesWebLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesWebLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesWebLink(val *RoutesWebLink) *NullableRoutesWebLink {
	return &NullableRoutesWebLink{value: val, isSet: true}
}

func (v NullableRoutesWebLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesWebLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


