/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesPictureWebLink struct for RoutesPictureWebLink
type RoutesPictureWebLink struct {
	Href *string `json:"href,omitempty"`
	Text *string `json:"text,omitempty"`
	UserDefined *string `json:"user_defined,omitempty"`
}

// NewRoutesPictureWebLink instantiates a new RoutesPictureWebLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesPictureWebLink() *RoutesPictureWebLink {
	this := RoutesPictureWebLink{}
	return &this
}

// NewRoutesPictureWebLinkWithDefaults instantiates a new RoutesPictureWebLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesPictureWebLinkWithDefaults() *RoutesPictureWebLink {
	this := RoutesPictureWebLink{}
	return &this
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RoutesPictureWebLink) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPictureWebLink) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RoutesPictureWebLink) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RoutesPictureWebLink) SetHref(v string) {
	o.Href = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RoutesPictureWebLink) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPictureWebLink) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RoutesPictureWebLink) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RoutesPictureWebLink) SetText(v string) {
	o.Text = &v
}

// GetUserDefined returns the UserDefined field value if set, zero value otherwise.
func (o *RoutesPictureWebLink) GetUserDefined() string {
	if o == nil || o.UserDefined == nil {
		var ret string
		return ret
	}
	return *o.UserDefined
}

// GetUserDefinedOk returns a tuple with the UserDefined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesPictureWebLink) GetUserDefinedOk() (*string, bool) {
	if o == nil || o.UserDefined == nil {
		return nil, false
	}
	return o.UserDefined, true
}

// HasUserDefined returns a boolean if a field has been set.
func (o *RoutesPictureWebLink) HasUserDefined() bool {
	if o != nil && o.UserDefined != nil {
		return true
	}

	return false
}

// SetUserDefined gets a reference to the given string and assigns it to the UserDefined field.
func (o *RoutesPictureWebLink) SetUserDefined(v string) {
	o.UserDefined = &v
}

func (o RoutesPictureWebLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.UserDefined != nil {
		toSerialize["user_defined"] = o.UserDefined
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesPictureWebLink struct {
	value *RoutesPictureWebLink
	isSet bool
}

func (v NullableRoutesPictureWebLink) Get() *RoutesPictureWebLink {
	return v.value
}

func (v *NullableRoutesPictureWebLink) Set(val *RoutesPictureWebLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesPictureWebLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesPictureWebLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesPictureWebLink(val *RoutesPictureWebLink) *NullableRoutesPictureWebLink {
	return &NullableRoutesPictureWebLink{value: val, isSet: true}
}

func (v NullableRoutesPictureWebLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesPictureWebLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


