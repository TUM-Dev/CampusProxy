/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesCourseTeachingActivity struct for RoutesCourseTeachingActivity
type RoutesCourseTeachingActivity struct {
	InfoBlock *RoutesInfoBlock `json:"info_block,omitempty"`
	TeachingActivityId *string `json:"teaching_activity_id,omitempty"`
	TeachingActivityName *RoutesCourseCourseName `json:"teaching_activity_name,omitempty"`
}

// NewRoutesCourseTeachingActivity instantiates a new RoutesCourseTeachingActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesCourseTeachingActivity() *RoutesCourseTeachingActivity {
	this := RoutesCourseTeachingActivity{}
	return &this
}

// NewRoutesCourseTeachingActivityWithDefaults instantiates a new RoutesCourseTeachingActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesCourseTeachingActivityWithDefaults() *RoutesCourseTeachingActivity {
	this := RoutesCourseTeachingActivity{}
	return &this
}

// GetInfoBlock returns the InfoBlock field value if set, zero value otherwise.
func (o *RoutesCourseTeachingActivity) GetInfoBlock() RoutesInfoBlock {
	if o == nil || o.InfoBlock == nil {
		var ret RoutesInfoBlock
		return ret
	}
	return *o.InfoBlock
}

// GetInfoBlockOk returns a tuple with the InfoBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourseTeachingActivity) GetInfoBlockOk() (*RoutesInfoBlock, bool) {
	if o == nil || o.InfoBlock == nil {
		return nil, false
	}
	return o.InfoBlock, true
}

// HasInfoBlock returns a boolean if a field has been set.
func (o *RoutesCourseTeachingActivity) HasInfoBlock() bool {
	if o != nil && o.InfoBlock != nil {
		return true
	}

	return false
}

// SetInfoBlock gets a reference to the given RoutesInfoBlock and assigns it to the InfoBlock field.
func (o *RoutesCourseTeachingActivity) SetInfoBlock(v RoutesInfoBlock) {
	o.InfoBlock = &v
}

// GetTeachingActivityId returns the TeachingActivityId field value if set, zero value otherwise.
func (o *RoutesCourseTeachingActivity) GetTeachingActivityId() string {
	if o == nil || o.TeachingActivityId == nil {
		var ret string
		return ret
	}
	return *o.TeachingActivityId
}

// GetTeachingActivityIdOk returns a tuple with the TeachingActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourseTeachingActivity) GetTeachingActivityIdOk() (*string, bool) {
	if o == nil || o.TeachingActivityId == nil {
		return nil, false
	}
	return o.TeachingActivityId, true
}

// HasTeachingActivityId returns a boolean if a field has been set.
func (o *RoutesCourseTeachingActivity) HasTeachingActivityId() bool {
	if o != nil && o.TeachingActivityId != nil {
		return true
	}

	return false
}

// SetTeachingActivityId gets a reference to the given string and assigns it to the TeachingActivityId field.
func (o *RoutesCourseTeachingActivity) SetTeachingActivityId(v string) {
	o.TeachingActivityId = &v
}

// GetTeachingActivityName returns the TeachingActivityName field value if set, zero value otherwise.
func (o *RoutesCourseTeachingActivity) GetTeachingActivityName() RoutesCourseCourseName {
	if o == nil || o.TeachingActivityName == nil {
		var ret RoutesCourseCourseName
		return ret
	}
	return *o.TeachingActivityName
}

// GetTeachingActivityNameOk returns a tuple with the TeachingActivityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourseTeachingActivity) GetTeachingActivityNameOk() (*RoutesCourseCourseName, bool) {
	if o == nil || o.TeachingActivityName == nil {
		return nil, false
	}
	return o.TeachingActivityName, true
}

// HasTeachingActivityName returns a boolean if a field has been set.
func (o *RoutesCourseTeachingActivity) HasTeachingActivityName() bool {
	if o != nil && o.TeachingActivityName != nil {
		return true
	}

	return false
}

// SetTeachingActivityName gets a reference to the given RoutesCourseCourseName and assigns it to the TeachingActivityName field.
func (o *RoutesCourseTeachingActivity) SetTeachingActivityName(v RoutesCourseCourseName) {
	o.TeachingActivityName = &v
}

func (o RoutesCourseTeachingActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InfoBlock != nil {
		toSerialize["info_block"] = o.InfoBlock
	}
	if o.TeachingActivityId != nil {
		toSerialize["teaching_activity_id"] = o.TeachingActivityId
	}
	if o.TeachingActivityName != nil {
		toSerialize["teaching_activity_name"] = o.TeachingActivityName
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesCourseTeachingActivity struct {
	value *RoutesCourseTeachingActivity
	isSet bool
}

func (v NullableRoutesCourseTeachingActivity) Get() *RoutesCourseTeachingActivity {
	return v.value
}

func (v *NullableRoutesCourseTeachingActivity) Set(val *RoutesCourseTeachingActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesCourseTeachingActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesCourseTeachingActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesCourseTeachingActivity(val *RoutesCourseTeachingActivity) *NullableRoutesCourseTeachingActivity {
	return &NullableRoutesCourseTeachingActivity{value: val, isSet: true}
}

func (v NullableRoutesCourseTeachingActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesCourseTeachingActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


