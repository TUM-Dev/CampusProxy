/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesCourse struct for RoutesCourse
type RoutesCourse struct {
	AdmissionInfo *RoutesCourseAdmissionInfo `json:"admission_info,omitempty"`
	Contacts *RoutesCourseContacts `json:"contacts,omitempty"`
	CourseCode *string `json:"course_code,omitempty"`
	CourseDescription *string `json:"course_description,omitempty"`
	CourseId *string `json:"course_id,omitempty"`
	CourseName *RoutesCourseCourseName `json:"course_name,omitempty"`
	Credits *RoutesCourseCredits `json:"credits,omitempty"`
	Exam *RoutesCourseExam `json:"exam,omitempty"`
	FormOfAssessment *string `json:"form_of_assessment,omitempty"`
	FormOfTeaching *string `json:"form_of_teaching,omitempty"`
	InstructionLanguage *RoutesCourseInstructionLanguage `json:"instruction_language,omitempty"`
	Language *string `json:"language,omitempty"`
	LearningObjectives *string `json:"learning_objectives,omitempty"`
	Level *RoutesCourseLevel `json:"level,omitempty"`
	Syllabus *string `json:"syllabus,omitempty"`
	TeachingActivity *RoutesCourseTeachingActivity `json:"teaching_activity,omitempty"`
	TeachingTerm *string `json:"teaching_term,omitempty"`
	TypeId *string `json:"type_id,omitempty"`
	TypeName *string `json:"type_name,omitempty"`
}

// NewRoutesCourse instantiates a new RoutesCourse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesCourse() *RoutesCourse {
	this := RoutesCourse{}
	return &this
}

// NewRoutesCourseWithDefaults instantiates a new RoutesCourse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesCourseWithDefaults() *RoutesCourse {
	this := RoutesCourse{}
	return &this
}

// GetAdmissionInfo returns the AdmissionInfo field value if set, zero value otherwise.
func (o *RoutesCourse) GetAdmissionInfo() RoutesCourseAdmissionInfo {
	if o == nil || o.AdmissionInfo == nil {
		var ret RoutesCourseAdmissionInfo
		return ret
	}
	return *o.AdmissionInfo
}

// GetAdmissionInfoOk returns a tuple with the AdmissionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetAdmissionInfoOk() (*RoutesCourseAdmissionInfo, bool) {
	if o == nil || o.AdmissionInfo == nil {
		return nil, false
	}
	return o.AdmissionInfo, true
}

// HasAdmissionInfo returns a boolean if a field has been set.
func (o *RoutesCourse) HasAdmissionInfo() bool {
	if o != nil && o.AdmissionInfo != nil {
		return true
	}

	return false
}

// SetAdmissionInfo gets a reference to the given RoutesCourseAdmissionInfo and assigns it to the AdmissionInfo field.
func (o *RoutesCourse) SetAdmissionInfo(v RoutesCourseAdmissionInfo) {
	o.AdmissionInfo = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *RoutesCourse) GetContacts() RoutesCourseContacts {
	if o == nil || o.Contacts == nil {
		var ret RoutesCourseContacts
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetContactsOk() (*RoutesCourseContacts, bool) {
	if o == nil || o.Contacts == nil {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *RoutesCourse) HasContacts() bool {
	if o != nil && o.Contacts != nil {
		return true
	}

	return false
}

// SetContacts gets a reference to the given RoutesCourseContacts and assigns it to the Contacts field.
func (o *RoutesCourse) SetContacts(v RoutesCourseContacts) {
	o.Contacts = &v
}

// GetCourseCode returns the CourseCode field value if set, zero value otherwise.
func (o *RoutesCourse) GetCourseCode() string {
	if o == nil || o.CourseCode == nil {
		var ret string
		return ret
	}
	return *o.CourseCode
}

// GetCourseCodeOk returns a tuple with the CourseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetCourseCodeOk() (*string, bool) {
	if o == nil || o.CourseCode == nil {
		return nil, false
	}
	return o.CourseCode, true
}

// HasCourseCode returns a boolean if a field has been set.
func (o *RoutesCourse) HasCourseCode() bool {
	if o != nil && o.CourseCode != nil {
		return true
	}

	return false
}

// SetCourseCode gets a reference to the given string and assigns it to the CourseCode field.
func (o *RoutesCourse) SetCourseCode(v string) {
	o.CourseCode = &v
}

// GetCourseDescription returns the CourseDescription field value if set, zero value otherwise.
func (o *RoutesCourse) GetCourseDescription() string {
	if o == nil || o.CourseDescription == nil {
		var ret string
		return ret
	}
	return *o.CourseDescription
}

// GetCourseDescriptionOk returns a tuple with the CourseDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetCourseDescriptionOk() (*string, bool) {
	if o == nil || o.CourseDescription == nil {
		return nil, false
	}
	return o.CourseDescription, true
}

// HasCourseDescription returns a boolean if a field has been set.
func (o *RoutesCourse) HasCourseDescription() bool {
	if o != nil && o.CourseDescription != nil {
		return true
	}

	return false
}

// SetCourseDescription gets a reference to the given string and assigns it to the CourseDescription field.
func (o *RoutesCourse) SetCourseDescription(v string) {
	o.CourseDescription = &v
}

// GetCourseId returns the CourseId field value if set, zero value otherwise.
func (o *RoutesCourse) GetCourseId() string {
	if o == nil || o.CourseId == nil {
		var ret string
		return ret
	}
	return *o.CourseId
}

// GetCourseIdOk returns a tuple with the CourseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetCourseIdOk() (*string, bool) {
	if o == nil || o.CourseId == nil {
		return nil, false
	}
	return o.CourseId, true
}

// HasCourseId returns a boolean if a field has been set.
func (o *RoutesCourse) HasCourseId() bool {
	if o != nil && o.CourseId != nil {
		return true
	}

	return false
}

// SetCourseId gets a reference to the given string and assigns it to the CourseId field.
func (o *RoutesCourse) SetCourseId(v string) {
	o.CourseId = &v
}

// GetCourseName returns the CourseName field value if set, zero value otherwise.
func (o *RoutesCourse) GetCourseName() RoutesCourseCourseName {
	if o == nil || o.CourseName == nil {
		var ret RoutesCourseCourseName
		return ret
	}
	return *o.CourseName
}

// GetCourseNameOk returns a tuple with the CourseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetCourseNameOk() (*RoutesCourseCourseName, bool) {
	if o == nil || o.CourseName == nil {
		return nil, false
	}
	return o.CourseName, true
}

// HasCourseName returns a boolean if a field has been set.
func (o *RoutesCourse) HasCourseName() bool {
	if o != nil && o.CourseName != nil {
		return true
	}

	return false
}

// SetCourseName gets a reference to the given RoutesCourseCourseName and assigns it to the CourseName field.
func (o *RoutesCourse) SetCourseName(v RoutesCourseCourseName) {
	o.CourseName = &v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *RoutesCourse) GetCredits() RoutesCourseCredits {
	if o == nil || o.Credits == nil {
		var ret RoutesCourseCredits
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetCreditsOk() (*RoutesCourseCredits, bool) {
	if o == nil || o.Credits == nil {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *RoutesCourse) HasCredits() bool {
	if o != nil && o.Credits != nil {
		return true
	}

	return false
}

// SetCredits gets a reference to the given RoutesCourseCredits and assigns it to the Credits field.
func (o *RoutesCourse) SetCredits(v RoutesCourseCredits) {
	o.Credits = &v
}

// GetExam returns the Exam field value if set, zero value otherwise.
func (o *RoutesCourse) GetExam() RoutesCourseExam {
	if o == nil || o.Exam == nil {
		var ret RoutesCourseExam
		return ret
	}
	return *o.Exam
}

// GetExamOk returns a tuple with the Exam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetExamOk() (*RoutesCourseExam, bool) {
	if o == nil || o.Exam == nil {
		return nil, false
	}
	return o.Exam, true
}

// HasExam returns a boolean if a field has been set.
func (o *RoutesCourse) HasExam() bool {
	if o != nil && o.Exam != nil {
		return true
	}

	return false
}

// SetExam gets a reference to the given RoutesCourseExam and assigns it to the Exam field.
func (o *RoutesCourse) SetExam(v RoutesCourseExam) {
	o.Exam = &v
}

// GetFormOfAssessment returns the FormOfAssessment field value if set, zero value otherwise.
func (o *RoutesCourse) GetFormOfAssessment() string {
	if o == nil || o.FormOfAssessment == nil {
		var ret string
		return ret
	}
	return *o.FormOfAssessment
}

// GetFormOfAssessmentOk returns a tuple with the FormOfAssessment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetFormOfAssessmentOk() (*string, bool) {
	if o == nil || o.FormOfAssessment == nil {
		return nil, false
	}
	return o.FormOfAssessment, true
}

// HasFormOfAssessment returns a boolean if a field has been set.
func (o *RoutesCourse) HasFormOfAssessment() bool {
	if o != nil && o.FormOfAssessment != nil {
		return true
	}

	return false
}

// SetFormOfAssessment gets a reference to the given string and assigns it to the FormOfAssessment field.
func (o *RoutesCourse) SetFormOfAssessment(v string) {
	o.FormOfAssessment = &v
}

// GetFormOfTeaching returns the FormOfTeaching field value if set, zero value otherwise.
func (o *RoutesCourse) GetFormOfTeaching() string {
	if o == nil || o.FormOfTeaching == nil {
		var ret string
		return ret
	}
	return *o.FormOfTeaching
}

// GetFormOfTeachingOk returns a tuple with the FormOfTeaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetFormOfTeachingOk() (*string, bool) {
	if o == nil || o.FormOfTeaching == nil {
		return nil, false
	}
	return o.FormOfTeaching, true
}

// HasFormOfTeaching returns a boolean if a field has been set.
func (o *RoutesCourse) HasFormOfTeaching() bool {
	if o != nil && o.FormOfTeaching != nil {
		return true
	}

	return false
}

// SetFormOfTeaching gets a reference to the given string and assigns it to the FormOfTeaching field.
func (o *RoutesCourse) SetFormOfTeaching(v string) {
	o.FormOfTeaching = &v
}

// GetInstructionLanguage returns the InstructionLanguage field value if set, zero value otherwise.
func (o *RoutesCourse) GetInstructionLanguage() RoutesCourseInstructionLanguage {
	if o == nil || o.InstructionLanguage == nil {
		var ret RoutesCourseInstructionLanguage
		return ret
	}
	return *o.InstructionLanguage
}

// GetInstructionLanguageOk returns a tuple with the InstructionLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetInstructionLanguageOk() (*RoutesCourseInstructionLanguage, bool) {
	if o == nil || o.InstructionLanguage == nil {
		return nil, false
	}
	return o.InstructionLanguage, true
}

// HasInstructionLanguage returns a boolean if a field has been set.
func (o *RoutesCourse) HasInstructionLanguage() bool {
	if o != nil && o.InstructionLanguage != nil {
		return true
	}

	return false
}

// SetInstructionLanguage gets a reference to the given RoutesCourseInstructionLanguage and assigns it to the InstructionLanguage field.
func (o *RoutesCourse) SetInstructionLanguage(v RoutesCourseInstructionLanguage) {
	o.InstructionLanguage = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *RoutesCourse) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *RoutesCourse) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *RoutesCourse) SetLanguage(v string) {
	o.Language = &v
}

// GetLearningObjectives returns the LearningObjectives field value if set, zero value otherwise.
func (o *RoutesCourse) GetLearningObjectives() string {
	if o == nil || o.LearningObjectives == nil {
		var ret string
		return ret
	}
	return *o.LearningObjectives
}

// GetLearningObjectivesOk returns a tuple with the LearningObjectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetLearningObjectivesOk() (*string, bool) {
	if o == nil || o.LearningObjectives == nil {
		return nil, false
	}
	return o.LearningObjectives, true
}

// HasLearningObjectives returns a boolean if a field has been set.
func (o *RoutesCourse) HasLearningObjectives() bool {
	if o != nil && o.LearningObjectives != nil {
		return true
	}

	return false
}

// SetLearningObjectives gets a reference to the given string and assigns it to the LearningObjectives field.
func (o *RoutesCourse) SetLearningObjectives(v string) {
	o.LearningObjectives = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *RoutesCourse) GetLevel() RoutesCourseLevel {
	if o == nil || o.Level == nil {
		var ret RoutesCourseLevel
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetLevelOk() (*RoutesCourseLevel, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *RoutesCourse) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given RoutesCourseLevel and assigns it to the Level field.
func (o *RoutesCourse) SetLevel(v RoutesCourseLevel) {
	o.Level = &v
}

// GetSyllabus returns the Syllabus field value if set, zero value otherwise.
func (o *RoutesCourse) GetSyllabus() string {
	if o == nil || o.Syllabus == nil {
		var ret string
		return ret
	}
	return *o.Syllabus
}

// GetSyllabusOk returns a tuple with the Syllabus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetSyllabusOk() (*string, bool) {
	if o == nil || o.Syllabus == nil {
		return nil, false
	}
	return o.Syllabus, true
}

// HasSyllabus returns a boolean if a field has been set.
func (o *RoutesCourse) HasSyllabus() bool {
	if o != nil && o.Syllabus != nil {
		return true
	}

	return false
}

// SetSyllabus gets a reference to the given string and assigns it to the Syllabus field.
func (o *RoutesCourse) SetSyllabus(v string) {
	o.Syllabus = &v
}

// GetTeachingActivity returns the TeachingActivity field value if set, zero value otherwise.
func (o *RoutesCourse) GetTeachingActivity() RoutesCourseTeachingActivity {
	if o == nil || o.TeachingActivity == nil {
		var ret RoutesCourseTeachingActivity
		return ret
	}
	return *o.TeachingActivity
}

// GetTeachingActivityOk returns a tuple with the TeachingActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetTeachingActivityOk() (*RoutesCourseTeachingActivity, bool) {
	if o == nil || o.TeachingActivity == nil {
		return nil, false
	}
	return o.TeachingActivity, true
}

// HasTeachingActivity returns a boolean if a field has been set.
func (o *RoutesCourse) HasTeachingActivity() bool {
	if o != nil && o.TeachingActivity != nil {
		return true
	}

	return false
}

// SetTeachingActivity gets a reference to the given RoutesCourseTeachingActivity and assigns it to the TeachingActivity field.
func (o *RoutesCourse) SetTeachingActivity(v RoutesCourseTeachingActivity) {
	o.TeachingActivity = &v
}

// GetTeachingTerm returns the TeachingTerm field value if set, zero value otherwise.
func (o *RoutesCourse) GetTeachingTerm() string {
	if o == nil || o.TeachingTerm == nil {
		var ret string
		return ret
	}
	return *o.TeachingTerm
}

// GetTeachingTermOk returns a tuple with the TeachingTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetTeachingTermOk() (*string, bool) {
	if o == nil || o.TeachingTerm == nil {
		return nil, false
	}
	return o.TeachingTerm, true
}

// HasTeachingTerm returns a boolean if a field has been set.
func (o *RoutesCourse) HasTeachingTerm() bool {
	if o != nil && o.TeachingTerm != nil {
		return true
	}

	return false
}

// SetTeachingTerm gets a reference to the given string and assigns it to the TeachingTerm field.
func (o *RoutesCourse) SetTeachingTerm(v string) {
	o.TeachingTerm = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *RoutesCourse) GetTypeId() string {
	if o == nil || o.TypeId == nil {
		var ret string
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetTypeIdOk() (*string, bool) {
	if o == nil || o.TypeId == nil {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *RoutesCourse) HasTypeId() bool {
	if o != nil && o.TypeId != nil {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given string and assigns it to the TypeId field.
func (o *RoutesCourse) SetTypeId(v string) {
	o.TypeId = &v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *RoutesCourse) GetTypeName() string {
	if o == nil || o.TypeName == nil {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCourse) GetTypeNameOk() (*string, bool) {
	if o == nil || o.TypeName == nil {
		return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *RoutesCourse) HasTypeName() bool {
	if o != nil && o.TypeName != nil {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *RoutesCourse) SetTypeName(v string) {
	o.TypeName = &v
}

func (o RoutesCourse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdmissionInfo != nil {
		toSerialize["admission_info"] = o.AdmissionInfo
	}
	if o.Contacts != nil {
		toSerialize["contacts"] = o.Contacts
	}
	if o.CourseCode != nil {
		toSerialize["course_code"] = o.CourseCode
	}
	if o.CourseDescription != nil {
		toSerialize["course_description"] = o.CourseDescription
	}
	if o.CourseId != nil {
		toSerialize["course_id"] = o.CourseId
	}
	if o.CourseName != nil {
		toSerialize["course_name"] = o.CourseName
	}
	if o.Credits != nil {
		toSerialize["credits"] = o.Credits
	}
	if o.Exam != nil {
		toSerialize["exam"] = o.Exam
	}
	if o.FormOfAssessment != nil {
		toSerialize["form_of_assessment"] = o.FormOfAssessment
	}
	if o.FormOfTeaching != nil {
		toSerialize["form_of_teaching"] = o.FormOfTeaching
	}
	if o.InstructionLanguage != nil {
		toSerialize["instruction_language"] = o.InstructionLanguage
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.LearningObjectives != nil {
		toSerialize["learning_objectives"] = o.LearningObjectives
	}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.Syllabus != nil {
		toSerialize["syllabus"] = o.Syllabus
	}
	if o.TeachingActivity != nil {
		toSerialize["teaching_activity"] = o.TeachingActivity
	}
	if o.TeachingTerm != nil {
		toSerialize["teaching_term"] = o.TeachingTerm
	}
	if o.TypeId != nil {
		toSerialize["type_id"] = o.TypeId
	}
	if o.TypeName != nil {
		toSerialize["type_name"] = o.TypeName
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesCourse struct {
	value *RoutesCourse
	isSet bool
}

func (v NullableRoutesCourse) Get() *RoutesCourse {
	return v.value
}

func (v *NullableRoutesCourse) Set(val *RoutesCourse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesCourse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesCourse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesCourse(val *RoutesCourse) *NullableRoutesCourse {
	return &NullableRoutesCourse{value: val, isSet: true}
}

func (v NullableRoutesCourse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesCourse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


