/*
 * CAMPUSOnline Webservice proxy
 *
 * This is the proxy server for CAMPUSOnline Webservices, enabling a nicely documented and uniform rest access to CAMPUSOnline resources.
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RoutesAddress struct for RoutesAddress
type RoutesAddress struct {
	ContactName *string `json:"contactName,omitempty"`
	Country *string `json:"country,omitempty"`
	Floor *string `json:"floor,omitempty"`
	Locality *string `json:"locality,omitempty"`
	PCode *string `json:"pCode,omitempty"`
	Region *string `json:"region,omitempty"`
	RoomAdditionalData *string `json:"roomAdditionalData,omitempty"`
	RoomCode *string `json:"roomCode,omitempty"`
	RoomID *int32 `json:"roomID,omitempty"`
	Street *string `json:"street,omitempty"`
}

// NewRoutesAddress instantiates a new RoutesAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesAddress() *RoutesAddress {
	this := RoutesAddress{}
	return &this
}

// NewRoutesAddressWithDefaults instantiates a new RoutesAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesAddressWithDefaults() *RoutesAddress {
	this := RoutesAddress{}
	return &this
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *RoutesAddress) GetContactName() string {
	if o == nil || o.ContactName == nil {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetContactNameOk() (*string, bool) {
	if o == nil || o.ContactName == nil {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *RoutesAddress) HasContactName() bool {
	if o != nil && o.ContactName != nil {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *RoutesAddress) SetContactName(v string) {
	o.ContactName = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *RoutesAddress) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *RoutesAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *RoutesAddress) SetCountry(v string) {
	o.Country = &v
}

// GetFloor returns the Floor field value if set, zero value otherwise.
func (o *RoutesAddress) GetFloor() string {
	if o == nil || o.Floor == nil {
		var ret string
		return ret
	}
	return *o.Floor
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetFloorOk() (*string, bool) {
	if o == nil || o.Floor == nil {
		return nil, false
	}
	return o.Floor, true
}

// HasFloor returns a boolean if a field has been set.
func (o *RoutesAddress) HasFloor() bool {
	if o != nil && o.Floor != nil {
		return true
	}

	return false
}

// SetFloor gets a reference to the given string and assigns it to the Floor field.
func (o *RoutesAddress) SetFloor(v string) {
	o.Floor = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *RoutesAddress) GetLocality() string {
	if o == nil || o.Locality == nil {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetLocalityOk() (*string, bool) {
	if o == nil || o.Locality == nil {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *RoutesAddress) HasLocality() bool {
	if o != nil && o.Locality != nil {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *RoutesAddress) SetLocality(v string) {
	o.Locality = &v
}

// GetPCode returns the PCode field value if set, zero value otherwise.
func (o *RoutesAddress) GetPCode() string {
	if o == nil || o.PCode == nil {
		var ret string
		return ret
	}
	return *o.PCode
}

// GetPCodeOk returns a tuple with the PCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetPCodeOk() (*string, bool) {
	if o == nil || o.PCode == nil {
		return nil, false
	}
	return o.PCode, true
}

// HasPCode returns a boolean if a field has been set.
func (o *RoutesAddress) HasPCode() bool {
	if o != nil && o.PCode != nil {
		return true
	}

	return false
}

// SetPCode gets a reference to the given string and assigns it to the PCode field.
func (o *RoutesAddress) SetPCode(v string) {
	o.PCode = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *RoutesAddress) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *RoutesAddress) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *RoutesAddress) SetRegion(v string) {
	o.Region = &v
}

// GetRoomAdditionalData returns the RoomAdditionalData field value if set, zero value otherwise.
func (o *RoutesAddress) GetRoomAdditionalData() string {
	if o == nil || o.RoomAdditionalData == nil {
		var ret string
		return ret
	}
	return *o.RoomAdditionalData
}

// GetRoomAdditionalDataOk returns a tuple with the RoomAdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetRoomAdditionalDataOk() (*string, bool) {
	if o == nil || o.RoomAdditionalData == nil {
		return nil, false
	}
	return o.RoomAdditionalData, true
}

// HasRoomAdditionalData returns a boolean if a field has been set.
func (o *RoutesAddress) HasRoomAdditionalData() bool {
	if o != nil && o.RoomAdditionalData != nil {
		return true
	}

	return false
}

// SetRoomAdditionalData gets a reference to the given string and assigns it to the RoomAdditionalData field.
func (o *RoutesAddress) SetRoomAdditionalData(v string) {
	o.RoomAdditionalData = &v
}

// GetRoomCode returns the RoomCode field value if set, zero value otherwise.
func (o *RoutesAddress) GetRoomCode() string {
	if o == nil || o.RoomCode == nil {
		var ret string
		return ret
	}
	return *o.RoomCode
}

// GetRoomCodeOk returns a tuple with the RoomCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetRoomCodeOk() (*string, bool) {
	if o == nil || o.RoomCode == nil {
		return nil, false
	}
	return o.RoomCode, true
}

// HasRoomCode returns a boolean if a field has been set.
func (o *RoutesAddress) HasRoomCode() bool {
	if o != nil && o.RoomCode != nil {
		return true
	}

	return false
}

// SetRoomCode gets a reference to the given string and assigns it to the RoomCode field.
func (o *RoutesAddress) SetRoomCode(v string) {
	o.RoomCode = &v
}

// GetRoomID returns the RoomID field value if set, zero value otherwise.
func (o *RoutesAddress) GetRoomID() int32 {
	if o == nil || o.RoomID == nil {
		var ret int32
		return ret
	}
	return *o.RoomID
}

// GetRoomIDOk returns a tuple with the RoomID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetRoomIDOk() (*int32, bool) {
	if o == nil || o.RoomID == nil {
		return nil, false
	}
	return o.RoomID, true
}

// HasRoomID returns a boolean if a field has been set.
func (o *RoutesAddress) HasRoomID() bool {
	if o != nil && o.RoomID != nil {
		return true
	}

	return false
}

// SetRoomID gets a reference to the given int32 and assigns it to the RoomID field.
func (o *RoutesAddress) SetRoomID(v int32) {
	o.RoomID = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *RoutesAddress) GetStreet() string {
	if o == nil || o.Street == nil {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesAddress) GetStreetOk() (*string, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *RoutesAddress) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *RoutesAddress) SetStreet(v string) {
	o.Street = &v
}

func (o RoutesAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactName != nil {
		toSerialize["contactName"] = o.ContactName
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Floor != nil {
		toSerialize["floor"] = o.Floor
	}
	if o.Locality != nil {
		toSerialize["locality"] = o.Locality
	}
	if o.PCode != nil {
		toSerialize["pCode"] = o.PCode
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.RoomAdditionalData != nil {
		toSerialize["roomAdditionalData"] = o.RoomAdditionalData
	}
	if o.RoomCode != nil {
		toSerialize["roomCode"] = o.RoomCode
	}
	if o.RoomID != nil {
		toSerialize["roomID"] = o.RoomID
	}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	return json.Marshal(toSerialize)
}

type NullableRoutesAddress struct {
	value *RoutesAddress
	isSet bool
}

func (v NullableRoutesAddress) Get() *RoutesAddress {
	return v.value
}

func (v *NullableRoutesAddress) Set(val *RoutesAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesAddress(val *RoutesAddress) *NullableRoutesAddress {
	return &NullableRoutesAddress{value: val, isSet: true}
}

func (v NullableRoutesAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


