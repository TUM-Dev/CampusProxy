basePath: /api/v1
definitions:
  routes.Address:
    properties:
      contactName:
        example: Immobilien (ZA 4)
        type: string
      country:
        example: Deutschland
        type: string
      floor:
        example: 1.Obergeschoß
        type: string
      locality:
        example: Garching b. München
        type: string
      pCode:
        example: "85748"
        type: string
      region:
        example: Bayern
        type: string
      roomAdditionalData:
        example: 101, Hörsaal 1, "Interims I"
        type: string
      roomCode:
        example: 5620.01.101
        type: string
      roomID:
        example: 62015
        type: integer
      street:
        example: Boltzmannstr.    5
        type: string
    type: object
  routes.ApiError:
    properties:
      msg:
        example: CampusOnline returned a status code != 200.
        type: string
      status:
        example: 420
        type: integer
    type: object
  routes.ContactData:
    properties:
      adr:
        properties:
          country:
            type: string
          extadr:
            type: string
          locality:
            type: string
          pcode:
            type: string
          street:
            type: string
          text:
            type: string
        type: object
      contact_name:
        properties:
          chardata:
            type: string
          text:
            type: string
        type: object
      email:
        type: string
      telephone:
        properties:
          teltype:
            type: string
          text:
            type: string
        type: object
      text:
        type: string
      web_link:
        $ref: '#/definitions/routes.WebLink'
    type: object
  routes.Course:
    properties:
      admission_info:
        properties:
          admission_description:
            properties:
              user_defined:
                type: string
              web_link:
                $ref: '#/definitions/routes.WebLink'
            type: object
        type: object
      contacts:
        properties:
          person:
            items:
              $ref: '#/definitions/routes.Person'
            type: array
        type: object
      course_code:
        type: string
      course_description:
        type: string
      course_id:
        type: string
      course_name:
        properties:
          text:
            type: string
        type: object
      credits:
        properties:
          hours_per_week:
            type: string
          text:
            type: string
        type: object
      exam:
        properties:
          info_block:
            $ref: '#/definitions/routes.InfoBlock'
        type: object
      form_of_assessment:
        type: string
      form_of_teaching:
        type: string
      instruction_language:
        properties:
          teaching_lang:
            type: string
        type: object
      language:
        type: string
      learning_objectives:
        type: string
      level:
        properties:
          web_link:
            $ref: '#/definitions/routes.WebLink'
        type: object
      syllabus:
        type: string
      teaching_activity:
        properties:
          info_block:
            $ref: '#/definitions/routes.InfoBlock'
          teaching_activity_id:
            type: string
          teaching_activity_name:
            properties:
              text:
                type: string
            type: object
        type: object
      teaching_term:
        type: string
      type_id:
        type: string
      type_name:
        type: string
    type: object
  routes.InfoBlock:
    properties:
      picture:
        $ref: '#/definitions/routes.Picture'
      sub_block:
        properties:
          sub_block:
            type: string
          text:
            type: string
          user_defined:
            type: string
        type: object
      text:
        type: string
      web_link:
        $ref: '#/definitions/routes.WebLink'
    type: object
  routes.OrgUnit:
    properties:
      contacts:
        properties:
          contactData:
            $ref: '#/definitions/routes.ContactData'
          text:
            description: e.g. "Lehrstuhl", "Arbeitsgruppe", "Ausschuss", ...
            type: string
        type: object
      infoBlock:
        $ref: '#/definitions/routes.InfoBlock'
      orgUnitCode:
        type: string
      orgUnitID:
        type: string
      orgUnitKind:
        properties:
          subBlock:
            items:
              properties:
                text:
                  description: e.g. "Lehrstuhl", "Arbeitsgruppe", "Ausschuss", ...
                  type: string
                userDefined:
                  description: always "name"
                  type: string
              type: object
            type: array
          text:
            type: string
        type: object
      orgUnitName:
        properties:
          chardata:
            type: string
          text:
            type: string
        type: object
      orgUnits:
        items:
          $ref: '#/definitions/routes.OrgUnit'
        type: array
      text:
        type: string
    type: object
  routes.Person:
    properties:
      contact_data:
        $ref: '#/definitions/routes.ContactData'
      ident:
        type: string
      info_block:
        $ref: '#/definitions/routes.InfoBlock'
      name:
        properties:
          family:
            type: string
          given:
            type: string
          text:
            type: string
        type: object
      person_id:
        type: string
      role:
        properties:
          chardata:
            type: string
          role_id:
            type: string
          text:
            type: string
        type: object
      text:
        type: string
    type: object
  routes.Picture:
    properties:
      text:
        type: string
      web_link:
        properties:
          href:
            type: string
          text:
            type: string
          user_defined:
            type: string
        type: object
    type: object
  routes.SingleEvent:
    properties:
      address:
        $ref: '#/definitions/routes.Address'
      comment:
        example: Videoübertragung aus MW 0001
        type: string
      dtend:
        example: "2020-12-02T14:00:00Z"
        type: string
      dtstamp:
        example: "2020-03-20T10:15:50Z"
        type: string
      dtstart:
        example: "2020-12-02T13:00:00Z"
        type: string
      duration:
        example: PT01H00M
        type: string
      groupID:
        example: 850243
        type: integer
      groupName:
        example: Standardgruppe
        type: string
      recurringID:
        example: "431418"
        type: string
      singleEventID:
        example: 888021023
        type: integer
      singleEventTypeID:
        example: A
        type: string
      singleEventTypeName:
        example: Abhaltung
        type: string
      status:
        example: gelöscht
        type: string
      statusID:
        example: FG
        type: string
    type: object
  routes.WebLink:
    properties:
      href:
        type: string
      user_defined:
        type: string
    type: object
info:
  contact:
    name: Joscha Henningsen
    url: https://joschas.page
  description: This is the proxy server for CAMPUSOnline Webservices, enabling a nicely
    documented and uniform rest access to CAMPUSOnline resources.
  title: CAMPUSOnline Webservice proxy
  version: "1.0"
paths:
  /course:
    get:
      consumes:
      - application/json
      - text/xml
      description: This endpoint returns all information about a course, e.g. its
        title, description, semester, contacts and more.
      parameters:
      - in: query
        name: courseID
        type: string
      - description: DE or EN, optional
        in: query
        name: language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Course
          schema:
            $ref: '#/definitions/routes.Course'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/routes.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.ApiError'
      security:
      - ApiKeyAuth: []
      summary: export course information.
      tags:
      - course
  /course/events:
    get:
      consumes:
      - application/json
      - text/xml
      description: This endpoint returns a list containing all events of a course.
      parameters:
      - in: query
        name: courseID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Events
          schema:
            items:
              $ref: '#/definitions/routes.SingleEvent'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/routes.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.ApiError'
      security:
      - ApiKeyAuth: []
      summary: list events for course.
      tags:
      - course
  /course/students:
    get:
      consumes:
      - application/json
      - text/xml
      description: This endpoint returns a list containing all students enrolled in
        a course.
      parameters:
      - in: query
        name: courseID
        type: string
      - description: DE or EN, optional
        in: query
        name: language
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Students
          schema:
            items:
              $ref: '#/definitions/routes.Person'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/routes.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.ApiError'
      security:
      - ApiKeyAuth: []
      summary: list enrolled students for course.
      tags:
      - course
  /organization:
    get:
      consumes:
      - application/json
      - text/xml
      description: This endpoint returns all information about an organization and
        its sub-organization.
      parameters:
      - description: DE or EN, optional
        in: query
        name: language
        type: string
      - in: query
        name: orgUnitID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Organization
          schema:
            $ref: '#/definitions/routes.OrgUnit'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/routes.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.ApiError'
      security:
      - ApiKeyAuth: []
      summary: export an organization.
      tags:
      - organization
  /organization/courses:
    get:
      consumes:
      - application/json
      - text/xml
      description: This endpoint returns all courses that belong to the specified
        organization and all courses of sub-orgs. If a course belongs to a subOrg,
        orgUnitID is the ID of the subOrg.
      parameters:
      - default: 99
        description: how deep to include children (only relevant if includeChildren
          is true).
        in: query
        name: depth
        type: integer
      - default: true
        description: whether to include sub-organizations courses.
        in: query
        name: includeChildren
        type: boolean
      - enum:
        - DE
        - EN
        in: query
        name: language
        type: string
      - in: query
        name: orgUnitID
        type: string
      - enum:
        - W
        - S
        in: query
        name: teachingTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Courses
          schema:
            items:
              $ref: '#/definitions/routes.Course'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/routes.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/routes.ApiError'
      security:
      - ApiKeyAuth: []
      summary: Export an organizations courses.
      tags:
      - organization
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-api-key
    type: apiKey
swagger: "2.0"
